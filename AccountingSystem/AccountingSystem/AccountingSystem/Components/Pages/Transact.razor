@page "/transact"

<PageTitle>Transactions</PageTitle>

<!-- 🔹 Transactions Top Container -->
<div class="transactions-top-container">
    <h3>Transactions</h3>
</div>


<!-- 🔹 Add New Transaction Section -->
<h5 class="form-title">Add a New Transaction</h5>

<div class="container transaction-form">
    <div class="row">
        <div class="col-md-6 col-sm-6 mb-2">
            <div class="form-group">
                <label class="col-form-label-sm">Date:</label>
                <input type="date" class="form-control form-control-sm" bind-Value="@newTransaction.Date" />
            </div>
        </div>
        <div class="col-md-6 col-sm-6 mb-2">
            <div class="form-group">
                <label class="col-form-label-sm">Description:</label>
                <input type="text" class="form-control form-control-sm" bind-Value="@newTransaction.Description" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 col-sm-6 mb-2">
            <div class="form-group">
                <label class="col-form-label-sm">Amount:</label>
                <input type="number" class="form-control form-control-sm" bind-Value="@newTransaction.Amount" />
            </div>
        </div>
        <div class="col-md-6 col-sm-6 mb-2">
            <div class="form-group">
                <label class="col-form-label-sm">Type:</label>
                <select class="form-control form-control-sm" bind-Value="@newTransaction.Type">
                    <option value="Income">Income</option>
                    <option value="Expense">Expense</option>
                </select>
            </div>
        </div>
    </div>

    <br >
    <!-- ✅ Add Transaction Button -->
    <div class="row justify-content-start">
        <button class="btn btn-primary btn-sm add-transaction-btn" @onclick="AddTransaction">
            Add Transaction
        </button>
    </div>
</div>

<br />

<!-- 🔹 Latest Transactions -->
<h5 class="transactions-title">Latest Transactions</h5>
<div class="container transactions-container">
    <div class="table-responsive">
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Transaction ID</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in transactions.Take(5))
                {
                    <tr>
                        <td>@transaction.Date.ToShortDateString()</td>
                        <td>@transaction.TransactionId</td>
                        <td>@transaction.Description</td>
                        <td>@transaction.Amount.ToString("C", new System.Globalization.CultureInfo("fil-PH"))</td>
                        <td>@transaction.Type</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<br />

<!-- 🔹 View Full History Button -->
<div class="history-btn-container">
    <button class="history-btn" @onclick="ToggleHistory">
        @(showHistory ? "Hide History" : "View Full History")
    </button>
</div>


<!-- 🔹 Full Transaction History with Date Filter (Hidden by Default) -->
@if (showHistory)
{
    <h5 class="transactions-title mt-3">Transaction History</h5>

    <!-- 📅 Date Selector for Filtering -->
    <div class="form-group text-center mb-3">
        <label class="col-form-label-sm">Select Date:</label>
        <input type="date" class="form-control form-control-sm d-inline w-auto" bind-Value="@selectedDate" @onchange="FilterTransactions" />
    </div>

    <div class="container transactions-container">
        <div class="table-responsive">
            <table class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Transaction ID</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Type</th>
                    </tr>
                </thead>
                <tbody>
                    @if (filteredTransactions.Any())
                    {
                        @foreach (var transaction in filteredTransactions)
                        {
                            <tr>
                                <td>@transaction.Date.ToShortDateString()</td>
                                <td>@transaction.TransactionId</td>
                                <td>@transaction.Description</td>
                                <td>@transaction.Amount.ToString("C", new System.Globalization.CultureInfo("fil-PH"))</td>
                                <td>@transaction.Type</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No transactions found for the selected date.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private List<Transaction> transactions = new()
    {
        new Transaction { Date = DateTime.Now, TransactionId = "TXN001", Description = "Office Rent", Amount = 5000, Type = "Expense" },
        new Transaction { Date = DateTime.Now, TransactionId = "TXN002", Description = "Product Sale", Amount = 12000, Type = "Income" }
    };

    private Transaction newTransaction = new Transaction();
    private bool showHistory = false;
    private DateTime? selectedDate;
    private List<Transaction> filteredTransactions = new();

    private void AddTransaction()
    {
        if (!string.IsNullOrEmpty(newTransaction.Description) && newTransaction.Amount > 0)
        {
            newTransaction.TransactionId = $"TXN{transactions.Count + 1:D3}";
            transactions.Add(newTransaction);
            newTransaction = new Transaction(); // Reset form fields
        }
        FilterTransactions(); // Refresh the filtered list
    }

    private void ToggleHistory()
    {
        showHistory = !showHistory;
        if (showHistory)
        {
            FilterTransactions(); // Refresh the filtered list
        }
    }

    private void FilterTransactions()
    {
        if (selectedDate.HasValue)
        {
            filteredTransactions = transactions
                .Where(t => t.Date.Date == selectedDate.Value.Date)
                .ToList();
        }
        else
        {
            filteredTransactions = new List<Transaction>(transactions);
        }
    }

    private class Transaction
    {
        public DateTime Date { get; set; } = DateTime.Now;
        public string TransactionId { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public decimal Amount { get; set; }
        public string Type { get; set; } = "Income";
    }
}
